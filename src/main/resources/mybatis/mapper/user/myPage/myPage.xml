<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.prj.web.awesome.user.mapperInterface.MyPageMapper">
	<select id="addrList" resultType="com.prj.web.awesome.user.dto.AddrDTO">
		select * from addr where user_id=#{user_id};
	</select>

	<select id="addrSelectOne" resultType="com.prj.web.awesome.user.dto.AddrDTO">
		select * from addr where addr_seq=#{addr_seq};
	</select>


	<insert id="addrInsert">
		insert into addr values(
			#{addr_seq},
			#{addr_name},
			#{addr_reciver},
			#{addr_postcode},
			#{addr_addr},
			#{addr_addr2},
			#{addr_phone},
			#{addr_default},
			#{user_id} )
	</insert>

	<update id="insertAddrUpdate">
		update addr set
			addr_default='N'
		where user_id=#{user_id};
	</update>

	<update id="addrUpdate">
		update addr set

			addr_name=#{addr_name},
			addr_reciver=#{addr_reciver},
			addr_postcode=#{addr_postcode},
			addr_addr=#{addr_addr},
			addr_addr2=#{addr_addr2},
			addr_phone=#{addr_phone},
			addr_default = CASE when #{addr_default} = 'Y' THEN 'Y' ELSE 'N' END

			where addr_seq=#{addr_seq};
	</update>

	<delete id="addrDelete">
		delete from addr where addr_seq=#{addr_seq};
	</delete>


	<sql id="search">

			<bind name="keyVal" value="keyword"/>

		<choose>
			<when test="searchType=='D'.toString()">
				and order_status='D' )
			</when>
			<when test="searchType=='R'.toString()">
				and order_status='R' )
			</when>
			<when test="searchType=='J'.toString()">
				and order_status='J' )
			</when>
			<when test="searchType=='W'.toString()">
				and order_status='w' )
			</when>
			<when test="searchType=='cancel'.toString()">
				and order_claim='cancel' )
			</when>
			<when test="searchType=='exchange'.toString()">
				and order_claim='exchange' )
			</when>
			<when test="searchType=='return'.toString()">
				and order_claim='return' )
			</when>
			<otherwise> )</otherwise>
		</choose>
	</sql>

	<select id="searchList" resultType="com.prj.web.awesome.order.dto.OrderListDTO">
		SELECT o.user_id, o.order_code, o.order_date,
		       (select count(*) from order_detail d where o.order_code=d.order_code) order_count
		       ,o.order_price, o.order_payment, o.order_status, o.order_claim
		FROM order_list o
		where ( o.order_status != 'R' AND o.user_id=#{user_id}  <include refid="search"></include>
		order by o.order_code desc
		limit #{sno}, #{rowsPerPage}
	</select>

<!--	<select id="searchList" resultType="com.prj.web.awesome.order.dto.OrderListDTO">-->
<!--		SELECT o.user_id, o.order_code, o.order_date, i.item_name, o.order_price, o.order_payment, o.order_status, o.order_claim-->
<!--		FROM order_list o, order_detail d-->
<!--		JOIN item i ON d.item_id = i.item_id-->
<!--		where ( o.order_status != 'R' AND o.user_id=#{user_id}  <include refid="search"></include>-->
<!--		order by o.order_code desc-->
<!--		limit #{sno}, #{rowsPerPage}-->
<!--	</select>-->

	<select id="searchTotalCount" resultType="int">
		select count(*) from order_list
		where ( order_status != 'R' AND user_id=#{user_id} <include refid="search"></include>
	</select>

	<!-- ** Criteria PageList
        => MySql : limit a , b ( a개 제외하고 a+1 부터 b개 )  적용 -->
	<select id="criList" resultType="com.prj.web.awesome.order.dto.OrderListDTO">
		SELECT o.user_id, o.order_code, o.order_date, i.item_name, o.order_price, o.order_payment, o.order_status, o.order_claim
		FROM order_list o, order_detail d
		JOIN item i ON d.item_id = i.item_id
		where ( o.order_status != 'R' AND o.user_id=#{user_id} )
		order by o.order_code desc
			limit #{sno}, #{rowsPerPage}
	</select>


</mapper>